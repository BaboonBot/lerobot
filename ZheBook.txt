# Rosmaster Robot LeRobot Usage Guide

## Overview
This guide covers the complete usage of the Rosmaster robot with LeRobot framework, including three teleoperation methods and data recording capabilities.

## Hardware Setup
- **Robot**: Yahboom Rosmaster 6-DOF robot arm
- **Connection**: USB serial adapter connected to `/dev/myserial`
- **Cameras**: 
  - Front camera: `/dev/video0`
  - Optional wrist camera: `/dev/video2`
- **Joint Range**: Each servo operates from 0° to 180°

## Teleoperation Methods

### 1. Keyboard Teleoperator (rosmaster_keyboard)

The keyboard teleoperator provides real-time control using keyboard keys.

#### Command:
```bash
lerobot-teleoperate \
  --robot.type=rosmaster \
  --robot.com="/dev/myserial" \
  --robot.id="my_rosmaster_robot" \
  --robot.cameras="{front: {type: opencv, index_or_path: /dev/video0, width: 640, height: 480, fps: 30}}" \
  --teleop.type=rosmaster_keyboard \
  --teleop.joint_step=2.0 \
  --display_data=true
```

#### Key Controls:
- **q/a**: Joint 1 (+/-) - Base rotation
- **w/s**: Joint 2 (+/-) - Shoulder
- **e/d**: Joint 3 (+/-) - Elbow  
- **r/f**: Joint 4 (+/-) - Wrist pitch
- **t/g**: Joint 5 (+/-) - Wrist roll
- **y/h**: Joint 6 (+/-) - Gripper
- **SPACE**: Lock/Unlock position (SAFETY FEATURE - robot starts locked!)
- **ESC**: Disconnect and exit

#### Usage Steps:
1. Run the command above
2. **IMPORTANT**: Press SPACE to unlock the robot (starts locked for safety)
3. Use the key combinations to move joints
4. Press SPACE again to lock position when done
5. Press ESC to exit

#### Safety Notes:
- Robot starts with position LOCKED - you must press SPACE to unlock
- Look for messages: "🔒 LOCKED" or "🔓 UNLOCKED"
- Always lock position when not actively controlling

### 2. Mecanum Wheel Teleoperator (rosmaster_mecanum)

The mecanum wheel teleoperator provides real-time control of the robot's base movement using 4 mecanum wheels.

#### Command:
```bash
lerobot-teleoperate \
  --robot.type=rosmaster \
  --robot.com="/dev/myserial" \
  --robot.id="my_rosmaster_robot" \
  --robot.cameras="{front: {type: opencv, index_or_path: /dev/video0, width: 640, height: 480, fps: 30}}" \
  --teleop.type=rosmaster_mecanum \
  --teleop.movement_step=0.3 \
  --teleop.rotation_step=1.0 \
  --display_data=true
```

#### Key Controls:
- **w/s**: Forward/Backward movement
- **a/d**: Strafe Left/Right movement  
- **q/e**: Rotate Left/Right
- **SPACE**: Lock/Unlock movement (SAFETY FEATURE - robot starts locked!)
- **ESC**: Disconnect and exit

#### Usage Steps:
1. Run the command above
2. **IMPORTANT**: Press SPACE to unlock the robot (starts locked for safety)
3. Use WASD keys for movement, Q/E for rotation
4. Press SPACE again to lock movement when done
5. Press ESC to exit

#### Safety Notes:
- Robot starts with movement LOCKED - you must press SPACE to unlock
- Look for messages: "🔒 LOCKED" or "🔓 UNLOCKED"
- Movement is limited to safe velocities: v_x/v_y ±1.0 m/s, v_z ±5.0 rad/s
- Always lock movement when not actively controlling

### 3. Combined Teleoperator (rosmaster_combined)

The combined teleoperator provides simultaneous control of both mecanum wheels and robot arm using separate key sets.

#### Command:
```bash
lerobot-teleoperate \
  --robot.type=rosmaster \
  --robot.com="/dev/myserial" \
  --robot.id="my_rosmaster_robot" \
  --robot.cameras="{front: {type: opencv, index_or_path: /dev/video0, width: 640, height: 480, fps: 30}}" \
  --teleop.type=rosmaster_combined \
  --teleop.movement_step=0.3 \
  --teleop.rotation_step=1.0 \
  --teleop.joint_step=2.0 \
  --display_data=true
```

#### Key Controls:

**Mecanum Wheels (WASDQE):**
- **W/S**: Forward/Backward movement
- **A/D**: Strafe Left/Right movement  
- **Q/E**: Rotate Left/Right

**Robot Arm (TGYH UJIK OLP;):**
- **T/G**: Joint 1 (+/-) - Base rotation
- **Y/H**: Joint 2 (+/-) - Shoulder
- **U/J**: Joint 3 (+/-) - Elbow  
- **I/K**: Joint 4 (+/-) - Wrist pitch
- **O/L**: Joint 5 (+/-) - Wrist roll
- **P/;**: Joint 6 (+/-) - Gripper

**Safety Controls:**
- **SPACE**: Lock/Unlock both movement and position (SAFETY FEATURE!)
- **R**: Reset to stopped state (all velocities to 0)
- **ESC**: Disconnect and exit

#### Usage Steps:
1. Run the command above
2. **IMPORTANT**: Press SPACE to unlock the robot (starts locked for safety)
3. Use WASDQE for mecanum movement, TGYH UJIK OLP; for arm control
4. Press R to stop all movement at any time
5. Press SPACE again to lock everything when done
6. Press ESC to exit

#### Safety Notes:
- Robot starts LOCKED - you must press SPACE to unlock both movement and joints
- Look for messages: "🔒 LOCKED" or "🔓 UNLOCKED"
- Movement velocities: v_x/v_y ±1.0 m/s, v_z ±5.0 rad/s
- Joint movements: ±2.0° per step (configurable)
- Always lock when not actively controlling

### 4. Terminal Teleoperator (rosmaster_terminal)

The terminal teleoperator allows precise control by typing exact joint angles.

#### Command:
```bash
lerobot-teleoperate \
  --robot.type=rosmaster \
  --robot.com="/dev/myserial" \
  --robot.id="my_rosmaster_robot" \
  --robot.cameras="{front: {type: opencv, index_or_path: /dev/video0, width: 640, height: 480, fps: 30}}" \
  --teleop.type=rosmaster_terminal \
  --display_data=true
```

#### Terminal Commands:
Once running, you'll see a `rosmaster>` prompt where you can type:

- **`set all <angles>`**: Set all 6 joints at once
  ```
  set all 60 120 45 50 90 70
  ```

- **`set <joint> <angle>`**: Set individual joint
  ```
  set servo_1 120
  set servo_2 45
  ```

- **`get`**: Show current joint positions
  ```
  get
  ```

- **`help`**: Show available commands
  ```
  help
  ```

- **`quit`**: Exit teleoperator
  ```
  quit
  ```

#### Example Session:
```
rosmaster> set servo_1 100
✅ Set servo_1 = 100°

rosmaster> set all 45 90 135 90 45 90
✅ Set all joints: [45.0, 90.0, 135.0, 90.0, 45.0, 90.0]

rosmaster> get
📍 Current Joint Positions:
  servo_1:   45.0°
  servo_2:   90.0°
  servo_3:  135.0°
  servo_4:   90.0°
  servo_5:   45.0°
  servo_6:   90.0°

rosmaster> quit
```

## Data Recording

### Basic Recording Command

Record demonstrations using either teleoperator:

#### With Keyboard Control:
```bash
lerobot-record \
  --robot.type=rosmaster \
  --robot.com="/dev/myserial" \
  --robot.id="my_rosmaster_robot" \
  --robot.cameras="{front: {type: opencv, index_or_path: /dev/video0, width: 640, height: 480, fps: 30}}" \
  --teleop.type=rosmaster_keyboard \
  --teleop.joint_step=2.0 \
  --dataset.repo_id="local_user/my_recording" \
  --dataset.single_task="Task description" \
  --dataset.num_episodes=5 \
  --dataset.episode_time_s=15 \
  --dataset.reset_time_s=5 \
  --dataset.fps=10 \
  --dataset.push_to_hub=false \
  --dataset.root="data/recordings" \
  --display_data=true
```

#### With Terminal Control:
```bash
lerobot-record \
  --robot.type=rosmaster \
  --robot.com="/dev/myserial" \
  --robot.id="my_rosmaster_robot" \
  --robot.cameras="{front: {type: opencv, index_or_path: /dev/video0, width: 640, height: 480, fps: 30}}" \
  --teleop.type=rosmaster_terminal \
  --dataset.repo_id="local_user/my_recording" \
  --dataset.single_task="Task description" \
  --dataset.num_episodes=5 \
  --dataset.episode_time_s=15 \
  --dataset.reset_time_s=5 \
  --dataset.fps=10 \
  --dataset.push_to_hub=false \
  --dataset.root="data/recordings" \
  --display_data=true
```

### Dual Camera Recording

For recording with both front and wrist cameras:

```bash
lerobot-record \
  --robot.type=rosmaster \
  --robot.com="/dev/myserial" \
  --robot.id="my_rosmaster_robot" \
  --robot.cameras="{front: {type: opencv, index_or_path: /dev/video0, width: 640, height: 480, fps: 30}, wrist: {type: opencv, index_or_path: /dev/video2, width: 640, height: 480, fps: 30}}" \
  --teleop.type=rosmaster_keyboard \
  --teleop.joint_step=2.0 \
  --dataset.repo_id="NLTuan/dual_camera_demo" \
  --dataset.single_task="Dual camera demonstration" \
  --dataset.num_episodes=3 \
  --dataset.episode_time_s=10 \
  --dataset.reset_time_s=5 \
  --dataset.fps=10 \
  --dataset.push_to_hub=true \
  --dataset.root="data/dual_recordings" \
  --display_data=true
```

### Recording Parameters Explained

- **`--robot.type=rosmaster`**: Robot type
- **`--robot.com="/dev/myserial"`**: Serial port (updated from ttyUSB0)
- **`--robot.id`**: Unique identifier for this robot
- **`--robot.cameras`**: Camera configuration (JSON format)
- **`--teleop.type`**: Choose from `rosmaster_keyboard`, `rosmaster_mecanum`, `rosmaster_combined`, or `rosmaster_terminal`
- **`--teleop.joint_step`**: Step size for keyboard control (degrees)
- **`--dataset.repo_id`**: Dataset identifier  
- **`--dataset.single_task`**: Description of the task being recorded
- **`--dataset.num_episodes`**: Number of episodes to record
- **`--dataset.episode_time_s`**: Duration of each episode (seconds)
- **`--dataset.reset_time_s`**: Time between episodes for resetting
- **`--dataset.fps`**: Recording frame rate
- **`--dataset.push_to_hub`**: Upload to HuggingFace Hub (true/false)
- **`--dataset.root`**: Local storage directory
- **`--display_data`**: Show real-time data during recording

### Quick Recording Examples

#### 10-Second Episodes (3 episodes):
```bash
lerobot-record \
  --robot.type=rosmaster \
  --robot.com="/dev/myserial" \
  --robot.id="demo_robot" \
  --robot.cameras="{front: {type: opencv, index_or_path: /dev/video0, width: 640, height: 480, fps: 30}}" \
  --teleop.type=rosmaster_keyboard \
  --teleop.joint_step=2.0 \
  --dataset.repo_id="local_user/quick_demo" \
  --dataset.single_task="Quick demonstration" \
  --dataset.num_episodes=3 \
  --dataset.episode_time_s=10 \
  --dataset.reset_time_s=5 \
  --dataset.fps=10 \
  --dataset.push_to_hub=false \
  --dataset.root="data/quick_demo" \
  --display_data=true
```

## Troubleshooting

### Common Issues:

1. **Robot not moving in keyboard mode**:
   - Solution: Press SPACE to unlock position control
   - Look for "🔓 UNLOCKED" message

2. **Serial port permission denied**:
   ```bash
   sudo chmod 666 /dev/myserial
   ```

3. **Camera not found**:
   ```bash
   ls -la /dev/video*  # Check available cameras
   ```

4. **Warnings in terminal**:
   - Motor read warnings are normal and suppressed
   - Recording continues without issues

### Joint Mapping:
- **servo_1**: Base rotation (0-180°)
- **servo_2**: Shoulder (0-180°)
- **servo_3**: Elbow (0-180°)
- **servo_4**: Wrist pitch (0-180°)
- **servo_5**: Wrist roll (0-180°)
- **servo_6**: Gripper (0-180°)

### Default Positions:
All servos start at 90° (middle position) for safety.

## Data Output Structure

Recorded data is saved in LeRobot format:

```
data/recordings/
├── data/
│   └── chunk-000/
│       └── train-00000-of-00001.parquet  # Tabular data
├── meta/
│   ├── info.json                         # Dataset metadata
│   └── stats.safetensors                 # Dataset statistics
└── videos/
    └── chunk-000/
        └── observation.images.front/
            └── episode_000000.mp4       # Video data
```

This data format is ready for training LeRobot policies and uploading to HuggingFace Hub.

## Tips for Best Results

1. **Use keyboard teleop for dynamic movements**
2. **Use terminal teleop for precise positioning**
3. **Start with short episodes (10-15 seconds)**
4. **Always reset robot position between episodes**
5. **Record multiple demonstrations of the same task**
6. **Ensure good lighting for cameras**
7. **Keep workspace clear of obstacles**

---
*Last updated: September 8, 2025*
*LeRobot version: Compatible with Rosmaster integration*
